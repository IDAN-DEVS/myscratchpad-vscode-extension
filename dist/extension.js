(()=>{"use strict";var e={123:(e,n)=>{var t;Object.defineProperty(n,"__esModule",{value:!0}),n.getCustomFileIcon=n.getFileTypeIcon=n.FileTypeEnum=void 0,function(e){e.JavaScript="js",e.TypeScript="ts",e.HTML="html",e.CSS="css",e.JSON="json",e.Markdown="md",e.Text="txt",e.SQL="sql",e.Custom="custom"}(t||(n.FileTypeEnum=t={})),n.getFileTypeIcon=e=>{switch(e){case t.JavaScript:return"symbol-method";case t.TypeScript:return"symbol-interface";case t.HTML:return"browser";case t.CSS:return"symbol-color";case t.JSON:return"symbol-object";case t.Markdown:return"markdown";case t.SQL:return"database";case t.Text:return"file-text";default:return(0,n.getCustomFileIcon)(e)}},n.getCustomFileIcon=e=>({py:"symbol-method",rb:"ruby",go:"go",java:"coffee",c:"symbol-method",cpp:"symbol-method",cs:"symbol-class",php:"symbol-method",swift:"symbol-method",kt:"symbol-class",rs:"symbol-method",dart:"symbol-method",lua:"symbol-method",r:"graph",sh:"terminal",bash:"terminal",ps1:"terminal",bat:"terminal",yaml:"symbol-object",yml:"symbol-object",toml:"symbol-object",ini:"gear",cfg:"gear",xml:"symbol-object",vue:"symbol-color",svelte:"symbol-color",jsx:"symbol-method",tsx:"symbol-interface",scss:"symbol-color",sass:"symbol-color",less:"symbol-color",styl:"symbol-color",coffee:"coffee",elm:"symbol-method",hs:"symbol-method",clj:"symbol-method",ex:"symbol-method",erl:"symbol-method",vim:"gear",dockerfile:"package",tf:"symbol-object",hcl:"symbol-object","*":"file-code"}[e.toLowerCase()]||"file-code")},265:function(e,n,t){var r,i=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(n,t);i&&!("get"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,i)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var n=[];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[n.length]=t);return n},r(e)},function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t=r(e),o=0;o<t.length;o++)"default"!==t[o]&&i(n,e,t[o]);return a(n,e),n});Object.defineProperty(n,"__esModule",{value:!0}),n.activate=function(e){console.log('Congratulations, your extension "MyScratchPad" is now active!');const n=c.join(e.globalStorageUri.fsPath,"scratchFiles");let t=s.workspace.workspaceFolders?c.basename(s.workspace.workspaceFolders[0].uri.fsPath):"default";const r=s.workspace.workspaceFolders?c.join(e.globalStorageUri.fsPath,"workspaceScratchFiles",t):c.join(e.globalStorageUri.fsPath,"workspaceScratchFiles"),i=new l.ScratchpadProvider(n,"global"),a=new d.ScratchpadService(n,"global"),o=new l.ScratchpadProvider(r,"workspace"),h=new d.ScratchpadService(r,"workspace"),m=new p.ScratchpadWebviewProvider(e.extensionUri,n,r,a,h);e.subscriptions.push(s.window.registerWebviewViewProvider(p.ScratchpadWebviewProvider.viewType,m)),setTimeout((()=>{try{const t=s.workspace.createFileSystemWatcher(new s.RelativePattern(n,"**/*")),i=s.workspace.createFileSystemWatcher(new s.RelativePattern(r,"**/*"));let a;const o=()=>{a&&clearTimeout(a),a=setTimeout((()=>{m.refresh()}),100)};t.onDidChange(o),t.onDidCreate(o),t.onDidDelete(o),i.onDidChange(o),i.onDidCreate(o),i.onDidDelete(o);const c=s.workspace.onDidSaveTextDocument((e=>{const t=e.uri.fsPath;(t.includes(n)||t.includes(r))&&o()}));e.subscriptions.push(t,i,c)}catch(e){console.error("Error setting up file watchers:",e)}}),1e3),e.subscriptions.push(s.commands.registerCommand("myscratchpad.createScratchFile",(async()=>{await a.createScratchFile(),m.refresh()})),s.commands.registerCommand("myscratchpad.createWorkspaceScratchFile",(async()=>{await h.createScratchFile(),m.refresh()})),s.commands.registerCommand("myscratchpad.deleteScratchFile",(async e=>{const n=e;if(n?.scratchFile){const e=n.scratchFile.path.includes("workspaceScratchFiles"),{service:t,provider:r}=e?{service:h,provider:o}:{service:a,provider:i};await t.deleteScratchFile(n.scratchFile)&&m.refresh()}})),s.commands.registerCommand("myscratchpad.renameScratchFile",(async e=>{const n=e;if(n?.scratchFile){const e=n.scratchFile.path.includes("workspaceScratchFiles"),{service:t,provider:r}=e?{service:h,provider:o}:{service:a,provider:i};await t.renameScratchFile(n.scratchFile)&&m.refresh()}})),s.commands.registerCommand("myscratchpad.refreshScratchpad",(()=>{m.refresh()})),s.commands.registerCommand("myscratchpad.refreshWorkspaceScratchpad",(()=>{m.refresh()})),s.commands.registerCommand("myscratchpad.createScratchFileFromSelection",(async()=>{await a.createScratchFileFromSelection(),m.refresh()})),s.commands.registerCommand("myscratchpad.createWorkspaceScratchFileFromSelection",(async()=>{await h.createScratchFileFromSelection(),m.refresh()})),s.commands.registerCommand("myscratchpad.createScratchFileFromFile",(async e=>{await a.createScratchFileFromFile(e),m.refresh()})),s.commands.registerCommand("myscratchpad.createWorkspaceScratchFileFromFile",(async e=>{await h.createScratchFileFromFile(e),m.refresh()})))},n.deactivate=function(){};const s=o(t(398)),c=o(t(928)),l=t(521),d=t(315),p=t(406)},315:function(e,n,t){var r,i=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(n,t);i&&!("get"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,i)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var n=[];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[n.length]=t);return n},r(e)},function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t=r(e),o=0;o<t.length;o++)"default"!==t[o]&&i(n,e,t[o]);return a(n,e),n});Object.defineProperty(n,"__esModule",{value:!0}),n.ScratchpadService=void 0;const s=o(t(398)),c=o(t(896)),l=o(t(928));n.ScratchpadService=class{scratchpadDir;scope;constructor(e,n="global"){this.scratchpadDir=e,this.scope=n,c.existsSync(e)||c.mkdirSync(e,{recursive:!0})}async createScratchFileFromSelection(){const e=s.window.activeTextEditor;if(!e)return void s.window.showErrorMessage("No active editor found");const n=e.selection,t=e.document.getText(n);if(!t.trim())return void s.window.showErrorMessage("No text selected");let r;if(e.document.fileName){const n=l.basename(e.document.fileName),t=l.extname(n);r=`${l.basename(n,t)}_scratch${t}`}await this.createScratchFile(t,r)}async createScratchFileFromFile(e){try{const n=await s.workspace.fs.readFile(e),t=Buffer.from(n).toString("utf8"),r=l.basename(e.fsPath),i=l.extname(r),a=`${l.basename(r,i)}_scratch${i}`;await this.createScratchFile(t,a)}catch(e){s.window.showErrorMessage(`Failed to read file: ${e}`)}}async createScratchFile(e,n){const t=n||this.generateDefaultName(),r=await s.window.showInputBox({prompt:"Enter a name for your scratch file (include extension, e.g., note.txt, script.js, data.json)",value:t,validateInput:e=>{if(!e)return"Name cannot be empty";if(!e.includes("."))return"Please include a file extension (e.g., .txt, .js, .md)";const n=l.join(this.scratchpadDir,e);return c.existsSync(n)?"A file with this name already exists":null}});if(!r)return;const i=l.extname(r).slice(1),a=l.join(this.scratchpadDir,r);let o;if(void 0!==e)o=e;else try{o=(await s.env.clipboard.readText()).trim()||this.getInitialContent(i)}catch(e){o=this.getInitialContent(i)}try{const e=l.dirname(a);c.existsSync(e)||c.mkdirSync(e,{recursive:!0}),c.writeFileSync(a,o,"utf8"),console.log("Created scratch file:",a);const n=await s.workspace.openTextDocument(a);await s.window.showTextDocument(n)}catch(e){console.error("Error creating scratch file:",e),s.window.showErrorMessage(`Failed to create scratch file: ${e}`)}}async deleteScratchFile(e){if("Delete"===await s.window.showWarningMessage(`Are you sure you want to delete '${e.name}'?`,{modal:!0},"Delete"))try{return c.unlinkSync(e.path),!0}catch(e){return console.error("Failed to delete scratch file:",e),s.window.showErrorMessage(`Failed to delete scratch file: ${e}`),!1}return!1}async renameScratchFile(e){const n=await s.window.showInputBox({prompt:"Enter a new name for your scratch file (include extension, e.g., note.txt, script.js)",value:e.name,validateInput:n=>{if(!n)return"Name cannot be empty";if(!n.includes("."))return"Please include a file extension (e.g., .txt, .js, .md)";const t=l.join(this.scratchpadDir,n);return c.existsSync(t)&&t!==e.path?"A file with this name already exists":null}});if(!n)return!1;const t=l.join(this.scratchpadDir,n);try{return c.renameSync(e.path,t),!0}catch(e){return console.error("Failed to rename scratch file:",e),s.window.showErrorMessage(`Failed to rename scratch file: ${e}`),!1}}generateDefaultName(){return`scratch_${(new Date).toISOString().replace(/[-:]/g,"").replace("T","_").substring(0,15)}.txt`}getInitialContent(e){const n=`// Created on ${(new Date).toLocaleString()}`;switch(e.toLowerCase()){case"js":return`${n}\n\n// JavaScript Scratch File\nconsole.log('Hello, World!');\n`;case"ts":return`${n}\n\n// TypeScript Scratch File\ninterface Person {\n  name: string;\n  age: number;\n}\n\nconst greeting = (person: Person): string => {\n  return \`Hello, \${person.name}!\`;\n};\n\nconsole.log(greeting({ name: 'World', age: 0 }));\n`;case"html":return`<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <title>Scratch</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 2rem;\n    }\n  </style>\n</head>\n<body>\n  <h1>HTML Scratch</h1>\n  <p>Created on ${(new Date).toLocaleString()}</p>\n</body>\n</html>\n`;case"css":return`/* Created on ${(new Date).toLocaleString()} */\n\n/* CSS Scratch File */\nbody {\n  font-family: Arial, sans-serif;\n  margin: 0;\n  padding: 20px;\n  color: #333;\n  background-color: #f5f5f5;\n}\n\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n`;case"json":return`{\n  "created": "${(new Date).toISOString()}",\n  "name": "JSON Scratch",\n  "items": [\n    {\n      "id": 1,\n      "value": "Example"\n    }\n  ]\n}\n`;case"md":case"markdown":return`# Markdown Scratch\n\nCreated on ${(new Date).toLocaleString()}\n\n## Heading\n\nSample text here.\n\n* List item 1\n* List item 2\n* List item 3\n\n## Code Example\n\n\`\`\`javascript\nconsole.log('Hello, World!');\n\`\`\`\n`;case"sql":return`-- Created on ${(new Date).toLocaleString()}\n\n-- SQL Scratch File\nSELECT *\nFROM users\nWHERE active = true\nORDER BY created_at DESC\nLIMIT 10;\n`;default:const t=this.getCommentCharForExtension(e);return`${t} Created on ${(new Date).toLocaleString()}\n\n${t} ${e.toUpperCase()} Scratch File\n\n`}}getCommentCharForExtension(e){return{py:"#",rb:"#",sh:"#",bash:"#",r:"#",pl:"#",php:"//",go:"//",java:"//",c:"//",cpp:"//",cs:"//",swift:"//",kt:"//",scala:"//",rust:"//",rs:"//",dart:"//",lua:"--",hs:"--",elm:"--",ex:"#",exs:"#",erl:"%",clj:";",lisp:";",vim:'"',ini:";",cfg:"#",yaml:"#",yml:"#",toml:"#",bat:"REM",ps1:"#"}[e.toLowerCase()]||"//"}}},398:e=>{e.exports=require("vscode")},406:function(e,n,t){var r,i=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(n,t);i&&!("get"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,i)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var n=[];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[n.length]=t);return n},r(e)},function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t=r(e),o=0;o<t.length;o++)"default"!==t[o]&&i(n,e,t[o]);return a(n,e),n});Object.defineProperty(n,"__esModule",{value:!0}),n.ScratchpadWebviewProvider=void 0;const s=o(t(398)),c=o(t(928)),l=o(t(896));n.ScratchpadWebviewProvider=class{_extensionUri;static viewType="myscratchpad.scratchpadView";_view;_globalService;_workspaceService;_globalDir;_workspaceDir;constructor(e,n,t,r,i){this._extensionUri=e,this._globalDir=n,this._workspaceDir=t,this._globalService=r,this._workspaceService=i}resolveWebviewView(e,n,t){this._view=e,e.webview.options={enableScripts:!0,localResourceRoots:[this._extensionUri]},e.webview.html=this._getHtmlForWebview(e.webview),e.webview.onDidReceiveMessage((async e=>{switch(e.type){case"ready":case"refresh":this.refresh();break;case"createGlobalScratch":await this._globalService.createScratchFile(),this.refresh();break;case"createWorkspaceScratch":await this._workspaceService.createScratchFile(),this.refresh();break;case"openFile":{const n=e.path,t=[];if("string"==typeof n){t.push(n),t.push(c.normalize(n)),t.push(n.replace(/\\/g,"/")),t.push(n.replace(/\//g,"\\"));try{const e=decodeURIComponent(n);e!==n&&t.push(e)}catch(e){}}const r=Array.from(new Set(t));let i;for(const e of r)try{if(l.existsSync(e)){i=e;break}}catch(n){console.warn("existsSync check failed for",e,n)}if(!i)try{const e=c.resolve(n);l.existsSync(e)&&(i=e)}catch(e){}try{if(i){const e=s.Uri.file(i),n=await s.workspace.openTextDocument(e);await s.window.showTextDocument(n),this._view&&this._view.webview.postMessage({type:"openResult",success:!0,path:i})}else{console.warn("No existing file found for candidates, attempting vscode.Uri.parse");const e=s.Uri.parse(n),t=await s.workspace.openTextDocument(e);await s.window.showTextDocument(t),this._view&&this._view.webview.postMessage({type:"openResult",success:!0,path:n})}}catch(e){console.error("Failed to open file from webview after trying candidates:",e,n),s.window.showErrorMessage(`Failed to open file: ${e}`),this._view&&this._view.webview.postMessage({type:"openResult",success:!1,error:String(e),candidates:r})}break}case"deleteFile":await this._deleteFile(e.file);break;case"renameFile":await this._renameFile(e.file);break;case"search":this._handleSearch(e.query)}}));const r=s.workspace.onDidSaveTextDocument((e=>{const n=e.uri.fsPath;(n.includes(this._globalDir)||n.includes(this._workspaceDir))&&setTimeout((()=>this.refresh()),50)}));e.onDidDispose((()=>{r.dispose()}))}async _deleteFile(e){const n=e.path.includes("workspaceScratchFiles")?this._workspaceService:this._globalService;await n.deleteScratchFile(e)&&this.refresh()}async _renameFile(e){const n=e.path.includes("workspaceScratchFiles")?this._workspaceService:this._globalService;await n.renameScratchFile(e)&&this.refresh()}_handleSearch(e){if(this._view){const{globalFiles:n,workspaceFiles:t}=this._getAllFiles(),r=this._filterFiles(n,e),i=this._filterFiles(t,e);this._view.webview.postMessage({type:"searchResults",globalFiles:r,workspaceFiles:i,query:e})}}_filterFiles(e,n){if(!n.trim())return e;const t=n.toLowerCase();return e.filter((e=>e.name.toLowerCase().includes(t)||e.extension.toLowerCase().includes(t)))}refresh(){if(this._view){const{globalFiles:e,workspaceFiles:n}=this._getAllFiles();this._view.webview.postMessage({type:"refresh",globalFiles:e,workspaceFiles:n})}}_getAllFiles(){return{globalFiles:this._getScratchFiles(this._globalDir),workspaceFiles:this._getScratchFiles(this._workspaceDir)}}_getScratchFiles(e){try{const n=["Code","Code - Insiders","Cursor","Windsurf"],t=c.normalize(e);let r=-1;const i=t.split(c.sep);for(let e=0;e<i.length;e++)if("User"===i[e]||"Users"===i[e]){r=e;break}if(-1===r)return console.warn("Could not find User/Users directory in path:",t),this._getDirectoryScratchFiles(e);const a=i.slice(0,r-1).join(c.sep),o=i.slice(r+1).join(c.sep),s=n.map((e=>("win32"===process.platform&&a.includes(":"),c.join(a,e,i[r],o)))),d=[],p=new Set;return l.existsSync(e)?this._getDirectoryScratchFiles(e):(s.forEach((e=>{if(l.existsSync(e))try{l.readdirSync(e).map((n=>c.join(e,n))).filter((e=>{try{return!l.statSync(e).isDirectory()}catch(n){return console.warn("Error checking file stats:",e,n),!1}})).forEach((e=>{const n=c.basename(e);p.has(n)||(p.add(n),d.push(e))}))}catch(n){console.warn("Error reading directory:",e,n)}})),this._processFileList(d))}catch(e){return console.error("Error reading scratchpad directory:",e),[]}}_getDirectoryScratchFiles(e){try{if(!l.existsSync(e))return[];const n=l.readdirSync(e).map((n=>c.join(e,n))).filter((e=>{try{return!l.statSync(e).isDirectory()}catch(n){return console.warn("Error checking file stats:",e,n),!1}}));return this._processFileList(n)}catch(n){return console.error("Error reading directory:",e,n),[]}}_processFileList(e){return e.map((e=>{try{const n=l.statSync(e),t=c.basename(e);return{name:t,extension:c.extname(t).slice(1),path:e,created:n.birthtime.getTime(),lastModified:n.mtime.getTime()}}catch(n){return console.error("Error processing file:",e,n),null}})).filter((e=>null!==e)).sort(((e,n)=>n.lastModified-e.lastModified))}_getHtmlForWebview(e){return"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>MyScratchPad</title>\n    <style>\n        body {\n            padding: 0;\n            margin: 0;\n            font-family: var(--vscode-font-family);\n            font-size: var(--vscode-font-size);\n            color: var(--vscode-foreground);\n            background-color: var(--vscode-sideBar-background);\n        }\n        \n        .container {\n            padding: 10px;\n        }\n        \n        .header {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            margin-bottom: 12px;\n            padding-bottom: 8px;\n            border-bottom: 1px solid var(--vscode-sideBar-border);\n        }\n        \n        .header h2 {\n            margin: 0;\n            font-size: 14px;\n            font-weight: 600;\n            flex: 1;\n        }\n        \n        .header-actions {\n            display: flex;\n            gap: 4px;\n        }\n        \n        .action-button {\n            background: transparent;\n            color: var(--vscode-foreground);\n            border: none;\n            border-radius: 2px;\n            padding: 6px 10px;\n            cursor: pointer;\n            font-size: 13px;\n            font-family: inherit;\n            font-weight: bold;\n        }\n        \n        .action-button:hover {\n            background: var(--vscode-toolbar-hoverBackground);\n        }\n        \n        .search-container {\n            margin-bottom: 12px;\n        }\n        \n        .search-input {\n            width: 100%;\n            padding: 6px 8px;\n            background: var(--vscode-input-background);\n            color: var(--vscode-input-foreground);\n            border: 1px solid var(--vscode-input-border);\n            border-radius: 2px;\n            font-family: inherit;\n            font-size: 12px;\n            outline: none;\n        }\n        \n        .search-input:focus {\n            border-color: var(--vscode-focusBorder);\n        }\n        \n        .section {\n            margin-bottom: 16px;\n        }\n        \n        .section-header {\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            margin-bottom: 6px;\n            padding: 4px 0;\n            cursor: pointer;\n            user-select: none;\n        }\n        \n        .section-header:hover {\n            background: var(--vscode-list-hoverBackground);\n            border-radius: 2px;\n        }\n        \n        .section-toggle {\n            font-size: 12px;\n            margin-right: 6px;\n            transition: transform 0.1s;\n        }\n        \n        .section-toggle.collapsed {\n            transform: rotate(-90deg);\n        }\n        \n        .section-content {\n            transition: all 0.2s ease;\n            overflow: hidden;\n        }\n        \n        .section-content.collapsed {\n            max-height: 0;\n            opacity: 0;\n        }\n        \n        .section-content.expanded {\n            max-height: 1000px;\n            opacity: 1;\n        }\n        \n        .section-title {\n            font-size: 11px;\n            font-weight: 600;\n            color: var(--vscode-foreground);\n            text-transform: uppercase;\n            letter-spacing: 0.5px;\n        }\n        \n        .section-count {\n            font-size: 10px;\n            color: var(--vscode-descriptionForeground);\n            background: var(--vscode-badge-background);\n            color: var(--vscode-badge-foreground);\n            padding: 1px 6px;\n            border-radius: 8px;\n            min-width: 16px;\n            text-align: center;\n        }\n        \n        .file-list {\n            list-style: none;\n            padding: 0;\n            margin: 0;\n        }\n        \n        .file-item {\n            display: flex;\n            align-items: center;\n            padding: 4px 8px;\n            border-radius: 2px;\n            cursor: pointer;\n            transition: background-color 0.1s;\n            position: relative;\n            margin-bottom: 1px;\n        }\n        \n        .file-item:hover {\n            background: var(--vscode-list-hoverBackground);\n        }\n        \n        .file-icon {\n            width: 16px;\n            height: 16px;\n            margin-right: 8px;\n            flex-shrink: 0;\n        }\n        \n        .file-info {\n            flex: 1;\n            min-width: 0;\n        }\n        \n        .file-name {\n            font-size: 12px;\n            color: var(--vscode-foreground);\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n        }\n        \n        .file-meta {\n            font-size: 10px;\n            color: var(--vscode-descriptionForeground);\n            margin-top: 1px;\n        }\n        \n        .file-actions {\n            display: none;\n            gap: 2px;\n        }\n        \n        .file-item:hover .file-actions {\n            display: flex;\n        }\n        \n        .file-action {\n            background: none;\n            border: none;\n            color: var(--vscode-foreground);\n            cursor: pointer;\n            padding: 2px;\n            border-radius: 2px;\n            font-size: 11px;\n            width: 16px;\n            height: 16px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n        \n        .file-action:hover {\n            background: var(--vscode-toolbar-hoverBackground);\n        }\n        \n        .empty-state {\n            text-align: center;\n            color: var(--vscode-descriptionForeground);\n            font-size: 11px;\n            padding: 20px;\n        }\n        \n        .loading {\n            text-align: center;\n            color: var(--vscode-descriptionForeground);\n            font-size: 11px;\n            padding: 10px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h2>MyScratchPad</h2>\n            <div class=\"header-actions\">\n                <button class=\"action-button\" onclick=\"refresh()\" title=\"Refresh\">🔄</button>\n            </div>\n        </div>\n        \n        <div class=\"search-container\">\n            <input type=\"text\" class=\"search-input\" placeholder=\"Search scratch files...\" oninput=\"handleSearch(this.value)\">\n        </div>\n        \n        <div class=\"section\">\n            <div class=\"section-header\" onclick=\"toggleSection('global')\">\n                <div style=\"display: flex; align-items: center;\">\n                    <span class=\"section-toggle collapsed\" id=\"global-toggle\">▶</span>\n                    <span class=\"section-title\">All Scratchpads</span>\n                </div>\n                <span class=\"section-count\" id=\"global-count\">0</span>\n            </div>\n            <div class=\"section-content collapsed\" id=\"global-content\">\n                <div style=\"margin-bottom: 8px;\">\n                    <button class=\"action-button\" onclick=\"createGlobalScratch()\" title=\"Create New Global Scratch File\">+ Global</button>\n                </div>\n                <ul class=\"file-list\" id=\"global-files\">\n                    <li class=\"loading\">Loading...</li>\n                </ul>\n            </div>\n        </div>\n        \n        <div class=\"section\">\n            <div class=\"section-header\" onclick=\"toggleSection('workspace')\">\n                <div style=\"display: flex; align-items: center;\">\n                    <span class=\"section-toggle collapsed\" id=\"workspace-toggle\">▶</span>\n                    <span class=\"section-title\">Workspace Scratchpads</span>\n                </div>\n                <span class=\"section-count\" id=\"workspace-count\">0</span>\n            </div>\n            <div class=\"section-content collapsed\" id=\"workspace-content\">\n                <div style=\"margin-bottom: 8px;\">\n                    <button class=\"action-button\" onclick=\"createWorkspaceScratch()\" title=\"Create New Workspace Scratch File\">+ Workspace</button>\n                </div>\n                <ul class=\"file-list\" id=\"workspace-files\">\n                    <li class=\"loading\">Loading...</li>\n                </ul>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        const vscode = acquireVsCodeApi();\n        \n        // State for section collapse/expand\n        let sectionStates = {\n            global: false,  // Start collapsed\n            workspace: false  // Start collapsed\n        };\n        \n        function createGlobalScratch() {\n            vscode.postMessage({ type: 'createGlobalScratch' });\n        }\n        \n        function createWorkspaceScratch() {\n            vscode.postMessage({ type: 'createWorkspaceScratch' });\n        }\n        \n        function openFile(path) {\n            vscode.postMessage({ type: 'openFile', path: path });\n        }\n        \n        function deleteFile(file) {\n            vscode.postMessage({ type: 'deleteFile', file });\n        }\n        \n        function renameFile(file) {\n            vscode.postMessage({ type: 'renameFile', file });\n        }\n        \n        function refresh() {\n            vscode.postMessage({ type: 'refresh' });\n        }\n        \n        function handleSearch(query) {\n            vscode.postMessage({ type: 'search', query });\n        }\n        \n        function toggleSection(sectionId) {\n            const content = document.getElementById(sectionId + '-content');\n            const toggle = document.getElementById(sectionId + '-toggle');\n            \n            sectionStates[sectionId] = !sectionStates[sectionId];\n            \n            if (sectionStates[sectionId]) {\n                content.classList.remove('collapsed');\n                content.classList.add('expanded');\n                toggle.classList.remove('collapsed');\n                toggle.textContent = '▼';\n            } else {\n                content.classList.remove('expanded');\n                content.classList.add('collapsed');\n                toggle.classList.add('collapsed');\n                toggle.textContent = '▶';\n            }\n        }\n        \n        function formatDate(timestamp) {\n            return new Date(timestamp).toLocaleDateString() + ' ' + \n                   new Date(timestamp).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});\n        }\n        \n        function getFileIcon(extension) {\n            const icons = {\n                'js': '📄',\n                'ts': '📘',\n                'html': '🌐',\n                'css': '🎨',\n                'json': '📋',\n                'md': '📝',\n                'txt': '📄',\n                'py': '🐍',\n                'java': '☕',\n                'cpp': '⚙️',\n                'c': '⚙️',\n                'go': '🐹',\n                'rs': '🦀',\n                'php': '🐘',\n                'rb': '💎',\n                'swift': '🦉',\n                'kt': '🎯',\n                'dart': '🎯',\n                'vue': '💚',\n                'jsx': '⚛️',\n                'tsx': '⚛️'\n            };\n            return icons[extension] || '📄';\n        }\n        \n        function renderFileList(files, containerId) {\n            const container = document.getElementById(containerId);\n            const countElement = document.getElementById(containerId.replace('-files', '-count'));\n\n            countElement.textContent = files.length;\n\n            // Clear container\n            container.innerHTML = '';\n\n            if (files.length === 0) {\n                container.innerHTML = '<li class=\"empty-state\">No files found</li>';\n                return;\n            }\n\n            // Build DOM nodes to avoid string-escaping issues on Windows paths\n            files.forEach((file) => {\n                const li = document.createElement('li');\n                li.className = 'file-item';\n\n                li.addEventListener('click', () => {\n                    openFile(file.path);\n                });\n\n                const iconSpan = document.createElement('span');\n                iconSpan.className = 'file-icon';\n                iconSpan.textContent = getFileIcon(file.extension);\n\n                const infoDiv = document.createElement('div');\n                infoDiv.className = 'file-info';\n\n                const nameDiv = document.createElement('div');\n                nameDiv.className = 'file-name';\n                nameDiv.title = file.name;\n                nameDiv.textContent = file.name;\n\n                const metaDiv = document.createElement('div');\n                metaDiv.className = 'file-meta';\n                metaDiv.textContent = 'Modified: ' + formatDate(file.lastModified);\n\n                infoDiv.appendChild(nameDiv);\n                infoDiv.appendChild(metaDiv);\n\n                const actionsDiv = document.createElement('div');\n                actionsDiv.className = 'file-actions';\n\n                const renameBtn = document.createElement('button');\n                renameBtn.className = 'file-action';\n                renameBtn.title = 'Rename';\n                renameBtn.textContent = '✏️';\n                renameBtn.addEventListener('click', (ev) => {\n                    ev.stopPropagation();\n                    renameFile(file);\n                });\n\n                const deleteBtn = document.createElement('button');\n                deleteBtn.className = 'file-action';\n                deleteBtn.title = 'Delete';\n                deleteBtn.textContent = '🗑️';\n                deleteBtn.addEventListener('click', (ev) => {\n                    ev.stopPropagation();\n                    deleteFile(file);\n                });\n\n                actionsDiv.appendChild(renameBtn);\n                actionsDiv.appendChild(deleteBtn);\n\n                li.appendChild(iconSpan);\n                li.appendChild(infoDiv);\n                li.appendChild(actionsDiv);\n\n                container.appendChild(li);\n            });\n        }\n        \n        // Handle messages from the extension\n        window.addEventListener('message', event => {\n            const message = event.data;\n            \n            switch (message.type) {\n                case 'refresh':\n                    renderFileList(message.globalFiles, 'global-files');\n                    renderFileList(message.workspaceFiles, 'workspace-files');\n                    break;\n                case 'searchResults':\n                    renderFileList(message.globalFiles, 'global-files');\n                    renderFileList(message.workspaceFiles, 'workspace-files');\n                    break;\n            }\n        });\n        \n        // Send ready message when page is fully loaded\n        window.addEventListener('DOMContentLoaded', () => {\n            vscode.postMessage({ type: 'ready' });\n        });\n        \n        // Fallback in case DOMContentLoaded already fired\n        if (document.readyState === 'loading') {\n            // Still loading, wait for DOMContentLoaded\n        } else {\n            // Already loaded\n            vscode.postMessage({ type: 'ready' });\n        }\n    <\/script>\n</body>\n</html>"}}},521:function(e,n,t){var r,i=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var i=Object.getOwnPropertyDescriptor(n,t);i&&!("get"in i?!n.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,i)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var n=[];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[n.length]=t);return n},r(e)},function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t=r(e),o=0;o<t.length;o++)"default"!==t[o]&&i(n,e,t[o]);return a(n,e),n});Object.defineProperty(n,"__esModule",{value:!0}),n.ScratchpadProvider=n.ScratchpadTreeItem=void 0;const s=o(t(398)),c=o(t(928)),l=o(t(896)),d=t(123);class p extends s.TreeItem{scratchFile;collapsibleState;constructor(e,n){super(e.name,n),this.scratchFile=e,this.collapsibleState=n,this.iconPath=new s.ThemeIcon((0,d.getFileTypeIcon)(e.extension)),this.command={command:"vscode.open",title:"Open Scratch File",arguments:[s.Uri.file(e.path)]},this.contextValue="scratchFile";const t=new Date(e.created).toLocaleString(),r=new Date(e.lastModified).toLocaleString();this.tooltip=`${e.name}\nCreated: ${t}\nLast Modified: ${r}`,this.description=e.extension}}n.ScratchpadTreeItem=p,n.ScratchpadProvider=class{scratchpadDir;scope;_onDidChangeTreeData=new s.EventEmitter;onDidChangeTreeData=this._onDidChangeTreeData.event;constructor(e,n="global"){this.scratchpadDir=e,this.scope=n,l.existsSync(e)||l.mkdirSync(e,{recursive:!0})}refresh(){this._onDidChangeTreeData.fire()}getTreeItem(e){return e}async getChildren(e){return e?[]:this.getScratchFiles()}getScratchFiles(){try{const e=["Code","Code - Insiders","Cursor","Windsurf"],n=c.normalize(this.scratchpadDir);let t=-1;const r=n.split(c.sep);for(let e=0;e<r.length;e++)if("User"===r[e]||"Users"===r[e]){t=e;break}if(-1===t)return console.warn("Could not find User/Users directory in path:",n),this.getDirectoryScratchFiles(this.scratchpadDir);const i=r.slice(0,t-1).join(c.sep),a=r.slice(t+1).join(c.sep),o=e.map((e=>("win32"===process.platform&&i.includes(":"),c.join(i,e,r[t],a)))),s=[],d=new Set;return l.existsSync(this.scratchpadDir)?this.getDirectoryScratchFiles(this.scratchpadDir):(o.forEach((e=>{if(l.existsSync(e))try{l.readdirSync(e).map((n=>c.join(e,n))).filter((e=>{try{return!l.statSync(e).isDirectory()}catch(n){return console.warn("Error checking file stats:",e,n),!1}})).forEach((e=>{const n=c.basename(e);d.has(n)||(d.add(n),s.push(e))}))}catch(n){console.warn("Error reading directory:",e,n)}})),this.processFileList(s))}catch(e){return console.error("Error reading scratchpad directory:",e),[]}}getDirectoryScratchFiles(e){try{if(!l.existsSync(e))return[];const n=l.readdirSync(e).map((n=>c.join(e,n))).filter((e=>{try{return!l.statSync(e).isDirectory()}catch(n){return console.warn("Error checking file stats:",e,n),!1}}));return this.processFileList(n)}catch(n){return console.error("Error reading directory:",e,n),[]}}processFileList(e){return e.map((e=>{try{const n=l.statSync(e),t=c.basename(e),r={name:t,extension:c.extname(t).slice(1),path:e,created:n.birthtime.getTime(),lastModified:n.mtime.getTime()};return new p(r,s.TreeItemCollapsibleState.None)}catch(n){return console.error("Error processing file:",e,n),null}})).filter((e=>null!==e)).sort(((e,n)=>n.scratchFile.lastModified-e.scratchFile.lastModified))}}},896:e=>{e.exports=require("fs")},928:e=>{e.exports=require("path")}},n={},t=function t(r){var i=n[r];if(void 0!==i)return i.exports;var a=n[r]={exports:{}};return e[r].call(a.exports,a,a.exports,t),a.exports}(265);module.exports=t})();